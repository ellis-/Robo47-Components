<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by PHP Project Wizard (PPW) 1.0.4 on Mon May 30 23:18:09 CEST 2011 -->

<project name="robo47Components" default="build" basedir=".">
    <property name="source" value="library/Robo47"/>

    <target name="clean" description="Clean up and create artifact directories">
        <delete dir="${basedir}/build/api"/>
        <delete dir="${basedir}/build/code-browser"/>
        <delete dir="${basedir}/build/coverage"/>
        <delete dir="${basedir}/build/logs"/>
        <delete dir="${basedir}/build/pdepend"/>

        <mkdir dir="${basedir}/build/api"/>
        <mkdir dir="${basedir}/build/code-browser"/>
        <mkdir dir="${basedir}/build/coverage"/>
        <mkdir dir="${basedir}/build/logs"/>
        <mkdir dir="${basedir}/build/pdepend"/>
    </target>

    <target name="clean-dependencies" description="Clean up dependencies like zend framework, ezc, doctrine, ...">
        <delete dir="${basedir}/build/dependencies"/>
    </target>

    <target name="init-dependencies">
        <exec dir="${basedir}" executable="git" failonerror="true">
            <arg line="clone gitosis@robo47.net:robo47ComponentsDependencies build/dependencies" />
        </exec>

        <exec dir="${basedir}/build/dependencies/" executable="git" failonerror="true">
            <arg line="submodule update --init" />
        </exec>

        <exec dir="${basedir}/build/dependencies/" executable="build.sh" failonerror="true" />
    </target>

    <target name="symlink-dependencies">
        <symlink link="${basedir}/library/Zend" resource="${basedir}/build/dependencies/zf/library/Zend/" />

        <symlink link="${basedir}/library/Doctrine" resource="${basedir}/build/dependencies/doctrine1/lib/Doctrine/" />
        <symlink link="${basedir}/library/Doctrine.php" resource="${basedir}/build/dependencies/doctrine1/lib/Doctrine.php" />

        <symlink link="${basedir}/library/ezc" resource="${basedir}/build/dependencies/ezc/" />

        <symlink link="${basedir}/library/HTMLPurifier" resource="${basedir}/build/dependencies/htmlpurifier/library/HTMLPurifier" />

        <symlink link="${basedir}/library/HTMLPurifier.php" resource="${basedir}/build/dependencies/htmlpurifier/library/HTMLPurifier.php" />
        <symlink link="${basedir}/library/HTMLPurifier.auto.php" resource="${basedir}/build/dependencies/htmlpurifier/library/HTMLPurifier.auto.php" />
        <symlink link="${basedir}/library/HTMLPurifier.autoload.php" resource="${basedir}/build/dependencies/htmlpurifier/library/HTMLPurifier.autoload.php" />
        <symlink link="${basedir}/library/HTMLPurifier.func.php" resource="${basedir}/build/dependencies/htmlpurifier/library/HTMLPurifier.func.php" />

        <symlink link="${basedir}/library/HTMLPurifier.includes.php" resource="${basedir}/build/dependencies/htmlpurifier/library/HTMLPurifier.includes.php" />

        <symlink link="${basedir}/library/HTMLPurifier.kses.php" resource="${basedir}/build/dependencies/htmlpurifier/library/HTMLPurifier.kses.php" />

        <symlink link="${basedir}/library/HTMLPurifier.path.php" resource="${basedir}/build/dependencies/htmlpurifier/library/HTMLPurifier.path.php" />

        <symlink link="${basedir}/library/HTMLPurifier.safe-includes.php" resource="${basedir}/build/dependencies/htmlpurifier/library/HTMLPurifier.safe-includes.php" />
        <symlink link="${basedir}/library/HTMLPurifier.standalone.php" resource="${basedir}/build/dependencies/htmlpurifier/library/HTMLPurifier.standalone.php" />

    </target>

    <target name="doxygen" description="Build api-documentation with doxygen">
        <mkdir dir="${basedir}/build/doxygen"/>
        <exec dir="${basedir}"
        executable="doxygen"
        failonerror="true">
        </exec>
    </target>

    <target name="phpunit" description="Run unit tests using PHPUnit and generates junit.xml and clover.xml">
        <exec executable="phpunit" failonerror="true"/>
    </target>

    <target name="parallelTasks" description="Run the pdepend, phpmd, phpcpd, phpcs, phpdoc and phploc tasks in parallel using a maximum of 2 threads.">
        <parallel threadCount="2">
            <sequential>
                <antcall target="pdepend"/>
                <antcall target="phpmd"/>
            </sequential>
            <antcall target="doxygen"/>
            <antcall target="phpcpd"/>
            <antcall target="phpcs"/>
            <antcall target="phpdoc"/>
            <antcall target="phploc"/>
        </parallel>
    </target>

    <target name="pdepend" description="Generate jdepend.xml and software metrics charts using PHP_Depend">
        <exec executable="pdepend">
            <arg line="--jdepend-xml=${basedir}/build/logs/jdepend.xml
              --jdepend-chart=${basedir}/build/pdepend/dependencies.svg
              --overview-pyramid=${basedir}/build/pdepend/overview-pyramid.svg
              ${source}" />
        </exec>
    </target>

    <target name="phpmd" description="Generate pmd.xml using PHPMD">
        <exec executable="phpmd">
            <arg line="${source}
              xml
              codesize,design,naming,unusedcode
              --reportfile ${basedir}/build/logs/pmd.xml" />
        </exec>
    </target>

    <target name="phpcpd" description="Generate pmd-cpd.xml using PHPCPD">
        <exec executable="phpcpd">
            <arg line="--log-pmd ${basedir}/build/logs/pmd-cpd.xml ${source}" />
        </exec>
    </target>

    <target name="phploc" description="Generate phploc.csv">
        <exec executable="phploc">
            <arg line="--log-csv ${basedir}/build/logs/phploc.csv ${source}" />
        </exec>
    </target>

    <target name="phpcs" description="Generate checkstyle.xml using PHP_CodeSniffer">
        <exec executable="phpcs" output="/dev/null">
            <arg line="--report=checkstyle
              --report-file=${basedir}/build/logs/checkstyle.xml
              --standard=PEAR
              ${source}" />
        </exec>
    </target>

    <target name="phpdoc" description="Generate API documentation using PHPDocumentor">
        <exec executable="phpdoc">
            <arg line="-d ${source} -t ${basedir}/build/api" />
        </exec>
    </target>

    <target name="phpcb" description="Aggregate tool output with PHP_CodeBrowser">
        <exec executable="phpcb">
            <arg line="--log    ${basedir}/build/logs
              --source ${source}
              --output ${basedir}/build/code-browser" />
        </exec>
    </target>

    <target name="build" depends="clean,parallelTasks,phpunit,phpcb"/>
</project>
